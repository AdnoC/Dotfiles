# vim: set ft=sh :
findhosts(){
  nmap -sP -n -oG - "$1"/24 | grep "Up" | awk '{print $2}' -
  echo "To scan those do: nmap $1-254" 
  echo "To scan and OS detect those do: sudo nmap -O $1-254" 
  echo "To intensly scan one do: sudo nmap -sV -vv -PN $1"
}

#functions
cs(){
  cd "$@" && ls .
}

# Create a new directory and enter it
function md() {
  mkdir -p "$@" && cd "$@"
}

# Copy w/ progress
cp_p () {
  rsync -WavP --human-readable --progress $1 $2
}

# Move up the directory tree quickly
# "up n" moves you up n times
function up()
{
  dir=""
  if [ -z "$1" ]; then
    dir=..
  elif [[ $1 =~ ^[0-9]+$ ]]; then
    x=0
    while [ $x -lt ${1:-1} ]; do
      dir=${dir}../
      x=$(($x+1))
    done
  else
    dir=${PWD%/$1/*}/$1
  fi
  cd "$dir";
}

# Shows the name of the directory you will go to if you use 'up'
function upstr()
{
    echo "$(up "$1" && pwd)";
}

#dirsize - finds directory sizes and lists them for the current directory
dirsize () {
  du -shx * .[a-zA-Z0-9_]* 2> /dev/null | \
  egrep '^ *[0-9.]*[MG]' | sort -n > /tmp/list
  egrep '^ *[0-9.]*M' /tmp/list
  egrep '^ *[0-9.]*G' /tmp/list
  rm -rf /tmp/list
}

# Looks through the list of proccesses for a specified process name
psgrep() {
  if [ ! -z $1 ] ; then
    echo "Grepping for processes matching $1..."
    ps aux | grep $1 | grep -v grep
  else
    echo "!! Need name to grep for"
  fi
}

if [[ "$OSTYPE" == darwin* ]]; then
  # Forces a drive to be unmounted. Useful if the OS insists that something is using it.
  eject() {
    sudo umount -f "/Volumes/$@"
  }
fi

if [ "$OSTYPE" == "cygwin" ]; then
  glfwcc() {
    x86_64-w64-mingw32-g++.exe -static "$@" -L /usr/local/lib -I /usr/local/include/  -lglfw3  -lopengl32 -lgdi32
  }

  # Opens a folder in Windows Explorer
  open() {
    /cygdrive/c/WINNT/explorer.exe /e,`cygpath -w "$@"`
  }
fi

if [ "$(uname)" == "Darwin" ]; then
  # Clear Appleâ€™s .DS_Store files which are used to store where files are placed
  # in Finder (The actual location in the window/on the desktop, not the directory)
  function dstore-clean() {
    find $@ -type f -name .DS_Store -print0 | xargs -0 rm
  }
fi

# Search all subdirectories for files containing a string
search() {
  grep -Rnis $@ **
}


# Change colorscheme between light and dark Solarized
function solChange() {
  if [ $SOL_FLAVOR = "light" ]; then
    source ~/sol.dark
  else
    source ~/sol.light
  fi
  source ~/.bash_prompt
  source ~/.bash_exports
}
