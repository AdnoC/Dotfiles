# To the extent possible under law, the author(s) have dedicated all 
# copyright and related and neighboring rights to this software to the 
# public domain worldwide. This software is distributed without any warranty. 
# You should have received a copy of the CC0 Public Domain Dedication along 
# with this software. 
# If not, see <http://creativecommons.org/publicdomain/zero/1.0/>. 

# base-files version 4.1-1

# ~/.inputrc: readline initialization file.

# The latest version as installed by the Cygwin Setup program can
# always be found at /etc/defaults/etc/skel/.inputrc

# Modifying /etc/skel/.inputrc directly will prevent
# setup from updating it.

# The copy in your home directory (~/.inputrc) is yours, please
# feel free to customise it to create a shell
# environment to your liking.  If you feel a change
# would be benifitial to all, please feel free to send
# a patch to the cygwin mailing list.


# https://github.com/acx0/etc/blob/master/inputrc
# and http://vim.wikia.com/wiki/Use_vi_shortcuts_in_terminal
set editing-mode vi

set bell-style none
set show-all-if-ambiguous on
#set show-all-if-unmodified on
set expand-tilde off
set match-hidden-files on

# append slash to tab-completed directory symlinks
set mark-symlinked-directories on

$if mode=vi
    # insert mode bindings
    set keymap vi-insert

    # Insert the last arguement of the previous command
    "\ep": yank-last-arg

    # use jk to exit insert mode
    "jk": vi-movement-mode

    # glob patterns without executing with <ALT-e>, eg: 'rm *x'
    "\ee": glob-expand-word

    # override default binding of unix-word-rubout so that '/' is also used as a
    # delimiter; bind-tty-special-chars must be off
    set bind-tty-special-chars off
    "\C-w": unix-filename-rubout

    # set tab to cycle through auto-complete suggestions instead of listing them;
    # must be placed after setting vi editing-mode
    #"\C-i": menu-complete

    # set alternative keys for tab completion
    "\C-n": menu-complete
    "\C-p": menu-complete-backward

    # search history for string up to cursor position
    "\C-j": history-search-forward
    "\C-k": history-search-backward

    # only works in command mode by default
    "\C-l": clear-screen

    # command mode bindings
    set keymap vi-command

    # Delete line shortcut
    "dd": kill-line

    # Insert the last arguement of the previous command
    "\ep": yank-last-arg

    # Insert all arguments from the last command (and execute)
    "\C-p": "i !!*\r"
$else

  # the following line is actually
  # equivalent to "\C-?": delete-char
  "\e[3~": delete-char

  # VT
  "\e[1~": beginning-of-line
  "\e[4~": end-of-line

  # kvt
  "\e[H": beginning-of-line
  "\e[F": end-of-line

  # rxvt and konsole (i.e. the KDE-app...)
  "\e[7~": beginning-of-line
  "\e[8~": end-of-line

  # VT220
  "\eOH": beginning-of-line
  "\eOF": end-of-line

  # Allow 8-bit input/output
  #set meta-flag on
  #set convert-meta off
  #set input-meta on
  #set output-meta on
  #$if Bash
    # Don't ring bell on completion
    #set bell-style none

    # or, don't beep at me - show me
    #set bell-style visible

    # Filename completion/expansion
    #set completion-ignore-case on
    #set show-all-if-ambiguous on

    # Expand homedir name
    #set expand-tilde on

    # Append "/" to all dirnames
    #set mark-directories on
    #set mark-symlinked-directories on

    # Match all files
    #set match-hidden-files on

    # 'Magic Space'
    # Insert a space character then performs
    # a history expansion in the line
    #Space: magic-space
  #$endif
$endif
