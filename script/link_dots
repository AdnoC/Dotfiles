#!/usr/bin/env bash
# vim: ft=sh

symlinkRelPath() {
  hardFilePath="$1"
  relSymPath="${hardFilePath#$DOTFILES_ROOT}"
  hardName="$(basename "$relSymPath")"
  fixedName="${hardName#symlink.}"
  relDirPath="$(dirname "$relSymPath")/"
  relPath="${relDirPath#/*/}"

  echo "$relPath$fixedName" # Not prefixed with a '/'
}

link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
    then

      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" == "$src" ]
      then

        skip=true;

      else

        user "File already exists: $(basename "$src"), what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac

      fi

    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]
    then
      success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    mkdir -p "$(dirname "$2")"
    ln -s "$1" "$2"
    success "linked $1 to $2"
  fi
}

install_dotfiles () {
  for src in $(find "$DOTFILES_ROOT" -name 'symlink.*')
  do
    dst="$HOME/$(symlinkRelPath "$src")"
    link_file "$src" "$dst"
  done
}

run_link_scripts() {
  # find the installers and run them iteratively
  for src in $(find "$DOTFILES_ROOT" -name 'link.sh')
  do
    info "link file: $src"
    source "$src"
  done
}

link_main() {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false
  install_dotfiles
  run_link_scripts
}

link_main
